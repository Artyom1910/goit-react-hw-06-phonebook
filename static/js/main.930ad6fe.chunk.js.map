{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","contacts.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","addNewContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","contacts","items","createReducer","state","filter","contact","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","rootReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ContactForm","nameId","numberId","handleChange","e","currentTarget","value","setState","findName","props","normalizedName","toLowerCase","find","handleSubmit","preventDefault","onSubmit","alert","resetForm","this","className","styles","Form","autoComplete","htmlFor","type","pattern","title","required","placeholder","onChange","button","Component","connect","dispatch","Filter","filterId","defaultProps","ContactItem","onDeleteItem","onClick","ContactList","onDeleteContact","map","onVisibleFilter","allContacts","normalizedFilter","includes","getVisibleContact","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.930ad6fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__21FIi\",\"button\":\"ContactForm_button__3ayo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1CDu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__2ZwGG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3swIK\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addNewContact = createAction(\r\n  'contacts/addContact',\r\n  ({ name, number }) => ({\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  }),\r\n);\r\n\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\nexport const changeFilter = createAction('contacts/changeFilter');","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const contacts = [\r\n  { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\r\n  { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\r\n];","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addNewContact, deleteContact, changeFilter } from './contacts-actions';\r\nimport { contacts } from '../../contacts';\r\n\r\nconst items = createReducer(contacts, {\r\n  [addNewContact]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n});\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addNewContact } from '../../redux/contacts/contacts-actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  nameId = uuidv4();\r\n  numberId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  findName = name => {\r\n    const { contacts } = this.props;\r\n    const normalizedName = name.toLowerCase();\r\n    return contacts.find(\r\n      contact => contact.name.toLowerCase() === normalizedName,\r\n    );\r\n  };\r\n  \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n    const { onSubmit } = this.props;\r\n    const checkName = this.findName(name);\r\n\r\n    if (checkName) {\r\n      alert(`${name} is already in contacts`);\r\n      this.resetForm();\r\n      return;\r\n    }\r\n\r\n    onSubmit(this.state);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form\r\n        className={styles.Form}\r\n        onSubmit={this.handleSubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label htmlFor={this.nameId}>\r\n          Name{' '}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"Type name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          id={this.nameId}\r\n        />\r\n\r\n        <label htmlFor={this.numberId}>\r\n          Number{' '}\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"Type number\"\r\n          id={this.numberId}\r\n          value={number}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(addNewContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  filterId = uuidv4();\r\n  render() {\r\n    const { filter, onChange } = this.props;\r\n\r\n    return (\r\n      <div className={styles.Filter}>\r\n        <label htmlFor={this.filterId}>\r\n          Find contacts by name{' '}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          id={this.filterId}\r\n          onChange={onChange}\r\n          placeholder=\"Type name contact\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.css';\r\n\r\nclass ContactItem extends Component {\r\n  render() {\r\n    const { name, number, onDeleteItem, id } = this.props;\r\n    const handleDelete = () => onDeleteItem(id);\r\n\r\n    return (\r\n      <li className={styles.ContactItem}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button\r\n          onClick={handleDelete}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\nexport default ContactItem;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { contacts, onDeleteContact } = this.props;\r\n    return (\r\n      <ul className={styles.ContactList}>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <ContactItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onDeleteItem={onDeleteContact}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.defaultProps = {\r\n  onVisibleFilter: [],\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  onVisibleFilter: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ),\r\n};\r\n\r\nconst getVisibleContact = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  const visivbleContacts = getVisibleContact(items, filter);\r\n\r\n  return {\r\n    contacts: visivbleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => (\n  <div className=\"Container\">\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <div className=\"Contacts\">\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}